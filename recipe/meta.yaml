{% set version = "1.19.5" %}

package:
  name: numpy
  version: {{ version }}

source:
  url: https://github.com/numpy/numpy/releases/download/v{{ version }}/numpy-{{ version }}.tar.gz
  sha256: d1654047d75fb9d55cc3d46f312d5247eec5f4999039874d2f571bb8021d8f0b
  patches:
    - cblas.diff

build:
  number: 3
  skip: true  # [py>39]
  entry_points:
    - f2py = numpy.f2py.f2py2e:main  # [win]
  run_exports:
    - {{ pin_subpackage("numpy") }}

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - {{ compiler('c') }}
  host:
    - python
    - pip
    - cython
    - libblas
    - libcblas
    - liblapack
  run:
    - python
  run_constrained:
    # enforce eviction of package from anaconda defaults
    - numpy-base <0a0

{% set tests_to_skip = "_not_a_real_test" %}
# behaviour change in lapack/openblas, see
# https://github.com/numpy/numpy/issues/18914
{% set tests_to_skip = tests_to_skip + " or (test_linalg and TestCond and test_nan)" %}
# Seems to fail with current version of glibc for large numbers
# https://github.com/numpy/numpy/issues/15179
{% set tests_to_skip = tests_to_skip + " or test_sincos_float32" %}                    # [linux64]
# skip tests that can fail to allocate array on windows
{% set tests_to_skip = tests_to_skip + " or test_big_arrays or test_to_ctypes" %}      # [win]
# skip a test on pypy that expects GC behaviour
{% set tests_to_skip = tests_to_skip + " or (TestPickling and test_roundtrip)" %}      # [python_impl == "pypy"]
# skip tests for windows + pypy + memmap
{% set tests_to_skip = tests_to_skip + " or memmap or test_empty_npz" %}               # [python_impl == "pypy" and win]
{% set tests_to_skip = tests_to_skip + " or test_metadata_dtype" %}                    # [python_impl == "pypy" and win]
# skip a test on pypy where an old file handle is still hot
{% set tests_to_skip = tests_to_skip + " or test_unicode_field_names" %}               # [python_impl == "pypy" and win]
# there are some tests that cannot really work in emulation, see e.g. numpy/numpy#20445
{% set tests_to_skip = tests_to_skip + " or TestF77Mismatch" %}                        # [build_platform != target_platform]
{% set tests_to_skip = tests_to_skip + " or Test_ARM_Features" %}                      # [build_platform != target_platform]
# spurious hypothesis failure in emulation
{% set tests_to_skip = tests_to_skip + " or test_clip_property" %}                     # [build_platform != target_platform or (python_impl == "pypy" and win)]

test:
  # this section will execute run_test.py
  requires:
    - pytest
    - pytest-timeout
    - pytest-xdist
    - hypothesis
    - setuptools
    # make sure we test with all blas implementations
    - blas =*=*{{ blas_impl }}
  commands:
    - f2py -h
    # numpy.test will show SIMD features of agent (in the past, there have been
    # failures that occured depending on presence/absence of e.g. AVX512);
    # for signature of numpy.test see the following (note default: label='fast'),
    # https://github.com/numpy/numpy/blob/maintenance/1.19.x/numpy/_pytesttester.py#L78-L79
    {% set label = "'fast'" if aarch64 else "'full'" %}
    {% set param = "verbose=1, label=" + label + ", tests=None" %}
    {% set extra = "extra_argv=['-k', 'not (" + tests_to_skip + ")', '-nauto', '--timeout=600', '--durations=50']" %}
    - python -c "import numpy, sys; sys.exit(not numpy.test({{ param }}, {{ extra }}))"
  imports:
    - numpy
    - numpy.core.multiarray
    - numpy.core._multiarray_tests
    - numpy.core.numeric
    - numpy.core._operand_flag_tests
    - numpy.core._struct_ufunc_tests
    - numpy.core._rational_tests
    - numpy.core.umath
    - numpy.core._umath_tests
    - numpy.linalg.lapack_lite
    - numpy.random.mtrand


about:
  home: http://numpy.scipy.org/
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: Array processing for numbers, strings, records, and objects.
  doc_url: https://docs.scipy.org/doc/numpy/reference/
  dev_url: https://github.com/numpy/numpy

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - pelson
    - rgommers
    - ocefpaf
    - isuruf
    - xhochy
