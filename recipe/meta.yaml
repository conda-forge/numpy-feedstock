{% set version = "2.3.2" %}
{% set dev = "" %}
# numpy will by default use the ABI feature level for the first numpy version
# that added support for the oldest currently-supported CPython version; see
# https://github.com/numpy/numpy/blob/v2.0.0rc1/numpy/_core/include/numpy/numpyconfig.h#L124
{% set default_abi_level = "1.23" %}

# ensure is_freethreading gets detected as a used variable
# [is_freethreading]

package:
  name: numpy
  version: {{ version }}{{ dev }}

source:
  # The sdist distributed by numpy contains submodules; by taking the tarball
  # from github we can everything pythran ourselves, but manually need to include
  # the submodules (not in tarball due to dear-github/dear-github#214); for the
  # list of modules see https://github.com/numpy/numpy/blob/main/.gitmodules
  - url: https://github.com/numpy/numpy/archive/refs/tags/v{{ version }}{{ dev }}.tar.gz
    sha256: 23c0450bc3643d396989e3e029971a067091d0423a021ae5b4b100e64178d268
  # https://github.com/numpy/numpy/tree/v{{ version }}/numpy/_core/src
  - folder: numpy/_core/src/highway
    git_url: https://github.com/google/highway.git
    git_rev: 0b696633f9ad89497dd5532b55eaa01625ad71ca
  # https://github.com/numpy/numpy/tree/v{{ version }}/numpy/_core/src/common
  - folder: numpy/_core/src/common/pythoncapi-compat
    git_url: https://github.com/python/pythoncapi-compat.git
    git_rev: 0f1d42a10a3f594ad48894912396df31b2c2d55d
  # https://github.com/numpy/numpy/tree/v{{ version }}/numpy/_core/src/npysort
  - folder: numpy/_core/src/npysort/x86-simd-sort
    git_url: https://github.com/intel/x86-simd-sort.git
    git_rev: c306ac581a59f89585d778254c4ed7197e64ba2d
  # https://github.com/numpy/numpy/tree/v{{ version }}/numpy/_core/src/umath
  - folder: numpy/_core/src/umath/svml
    git_url: https://github.com/numpy/SVML.git
    git_rev: 32bf2a98420762a63ab418aaa0a7d6e17eb9627a
  # https://github.com/numpy/numpy/tree/v{{ version }}/numpy/fft
  - folder: numpy/fft/pocketfft
    git_url: https://github.com/mreineck/pocketfft.git
    git_rev: 33ae5dc94c9cdc7f1c78346504a85de87cadaa12
  # https://github.com/numpy/numpy/tree/v{{ version }}/vendored-meson
  - folder: vendored-meson/meson
    git_url: https://github.com/numpy/meson.git
    git_rev: f754c4258805056ed7be09830d96af45215d341b

build:
  number: 0
  skip: true  # [py<311]
  entry_points:
    - f2py = numpy.f2py.f2py2e:main             # [win]
    - numpy-config = numpy._configtool:main     # [win]
  run_exports:
    - numpy >={{ default_abi_level }},<3

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - ninja                                  # [build_platform != target_platform]
    - pkg-config                             # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
  host:
    - pip
    # temporarily vendored by numpy
    # - meson
    - meson-python
    - ninja
    - pkg-config
    - python
    - python-build
    - cython
    - libblas
    - libcblas
    - liblapack
  run:
    - python
{% if dev != '' %}
    - _numpy_rc
{% endif %}
  run_constrained:
    # enforce eviction of package from anaconda defaults
    - numpy-base <0a0

{% set tests_to_skip = "_not_a_real_test" %}
# there are some tests that cannot really work in emulation, see e.g. numpy/numpy#20445
{% set tests_to_skip = tests_to_skip + " or Test_ARM_Features" %}                   # [build_platform != target_platform]
{% set tests_to_skip = tests_to_skip + " or Test_POWER_Features" %}                 # [build_platform != target_platform]
# test_new_policy reruns part of test suite; including a CPU feature test that fails in emulation
{% set tests_to_skip = tests_to_skip + " or test_new_policy" %}                     # [build_platform != target_platform]
# emulation problems (apparently) on aarch
{% set tests_to_skip = tests_to_skip + " or (test_basic_property and float32)" %}   # [aarch64]
{% set tests_to_skip = tests_to_skip + " or test_generalized_herm_cases" %}         # [aarch64]
{% set tests_to_skip = tests_to_skip + " or test_generalized_nonsq_cases" %}        # [aarch64]
{% set tests_to_skip = tests_to_skip + " or test_generalized_sq_cases" %}           # [aarch64]
{% set tests_to_skip = tests_to_skip + " or test_herm_cases or test_sq_cases" %}    # [aarch64]
{% set tests_to_skip = tests_to_skip + " or test_nonsq_cases" %}                    # [aarch64]
# https://github.com/numpy/numpy/issues/27045
{% set tests_to_skip = tests_to_skip + " or (test_regression and test_gh25784)" %}  # [osx]
# new test failures for 2.2.4; possibly emulation-related; see
# https://github.com/numpy/numpy/issues/28548
{% set tests_to_skip = tests_to_skip + " or test_einsum_sums_float32" %}            # [ppc64le]
{% set tests_to_skip = tests_to_skip + " or test_ufunc_noncontiguous[matvec]" %}    # [ppc64le]
{% set tests_to_skip = tests_to_skip + " or test_accelerate_framework_sgemv_fix " %}  # [ppc64le]

test:
  requires:
    - pytest
    - pytest-timeout
    - pytest-xdist
    # (mostly) optional test requirements (except wheel, python-cov, mypy), see
    # https://github.com/numpy/numpy/blob/main/requirements/test_requirements.txt
    - cython
    - hypothesis
    - meson
    - pytz
    - setuptools <60.0.0   # [py<=311]
    - setuptools           # [py>=312]
    - typing_extensions
    # some linux tests need a C/C++ compiler;
    # extra f2py tests need a fortran compiler
    - {{ compiler('c') }}        # [unix]
    - {{ compiler('cxx') }}      # [unix]
    - {{ compiler('fortran') }}  # [linux]
    # For some cython tests
    - pkg-config
  commands:
    - f2py -h
    # numpy.test will show SIMD features of agent (in the past, there have been
    # failures that occured depending on presence/absence of e.g. AVX512);
    # for signature of numpy.test see the following (note default: label='fast'),
    # https://github.com/numpy/numpy/blob/maintenance/1.22.x/numpy/_pytesttester.py#L81-L82
    {% set param = "verbose=1, label='full', tests=None" %}
    {% set extra = "extra_argv=['-k', 'not (" + tests_to_skip + ")', '-nauto', '--timeout=3000', '--durations=50', '--maxfail=100']" %}
    - python -c "import numpy, sys; sys.exit(not numpy.test({{ param }}, {{ extra }}))"
  imports:
    - numpy
    # reference for public API is effectively PUBLIC_MODULES under
    # https://github.com/numpy/numpy/blame/main/numpy/tests/test_public_api.py
    - numpy.ctypeslib
    - numpy.distutils           # [py<312]
    - numpy.dtypes
    - numpy.exceptions
    - numpy.f2py
    - numpy.fft
    - numpy.lib
    - numpy.lib.format
    - numpy.lib.mixins
    - numpy.lib.recfunctions
    - numpy.lib.scimath
    - numpy.lib.stride_tricks
    - numpy.lib.npyio
    - numpy.lib.introspect
    - numpy.lib.array_utils
    - numpy.linalg
    - numpy.ma
    - numpy.ma.extras
    - numpy.ma.mrecords
    - numpy.polynomial
    - numpy.polynomial.chebyshev
    - numpy.polynomial.hermite
    - numpy.polynomial.hermite_e
    - numpy.polynomial.laguerre
    - numpy.polynomial.legendre
    - numpy.polynomial.polynomial
    - numpy.random
    - numpy.testing
    - numpy.testing.overrides
    - numpy.typing
    - numpy.typing.mypy_plugin
    - numpy.version
    # some private modules that were once upon a time
    # determined to be useful packaging checks
    - numpy.core.multiarray
    - numpy.core.numeric
    - numpy.core.umath
    - numpy.linalg.lapack_lite
    - numpy.random.mtrand

about:
  home: http://numpy.org/
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: The fundamental package for scientific computing with Python.
  doc_url: https://numpy.org/doc/stable/
  dev_url: https://github.com/numpy/numpy

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - pelson
    - rgommers
    - ocefpaf
    - isuruf
    - xhochy
    - h-vetinari
